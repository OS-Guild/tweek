swagger: "2.0"
consumes:
  - application/json
produces:
  - application/json
schemes:
  - http
  - https
info:
  title: Tweek
  license:
    name: MIT
    url: https://github.com/Soluto/tweek/blob/master/LICENSE
  version: 0.1.0
basePath: /api/v2/
paths:
  /values:
    get:
      operationId: "GetValue"
      description: "Get tweek key value"
      tags:
        - configuraiton
      responses:
        200:
          description: "Success"
        400:
          description: "Invalid Request"
        403:
          description: "Unauthorized"
        404:
          description: "Key not found"
      parameters:
        - name: keyName
          in: query
          description: "Configuration key name"
          type: string
          required: true
        - name: $include
          in: query
          description: "Include additional keys"
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: $flatten
          in: query
          description: "Return flat key/value JSON (no nesting)"
          type: boolean
  /context/{identityType}/{identityId}:
    get:
      operationId: GetContext
      description: "Get identity context"
      tags:
        - context
      parameters:
        - name: identityType
          in: path
          description: the type of the identity - for example user
          type: string
          required: true
        - name: identityId
          in: path
          description: the identifier of the identity - for example jaime
          type: string
          required: true
      responses:
        '200':
          description: Ok
      produces:
        - application/json
    post:
      operationId: SaveContext
      description: "Save identity context"
      tags:
        - context
      parameters:
        - name: identityType
          in: path
          description: the type of the identity - for example user
          type: string
          required: true
        - name: identityId
          in: path
          description: the identifier of the identity - for example jaime
          type: string
          required: true
      responses:
        '200':
          description: Ok
  /context/{identityType}/{identityId}/{prop}:
    delete:
      operationId: DeleteContextProp
      description: "Delete identity context property"
      tags:
        - context
      parameters: 
        - name: identityType
          in: path
          description: the type of the identity - for example user
          type: string
          required: true
        - name: identityId
          in: path
          description: the identifier of the identity - for example jaime
          type: string
          required: true
        - name: prop
          in: path
          description: the property to delete, for example age
          type: string
          required: true
      responses:
        200:
          description: OK
  /keys:
    get:
      operationId: KeysGetKey
      produces:
          - application/json
      responses:
          '200':
              description: Ok
              schema:
                  type: object
      description: ""
      tags:
        - keys
      parameters:
        -
          description: ""
          in: query
          name: keyPath
          required: true
          type: string
        -
          description: ""
          in: query
          name: revision
          required: false
          type: string
    put:
      operationId: CreateKey
      description: "Save Key"
      produces:
          - text/html
      responses:
        200:
          description: Ok
          schema:
            type: string
      tags:
          - keys
      consumes:
          - application/json
      parameters:
          -
            description: ""
            in: query
            name: keyPath
            required: true
            type: string
          -
            description: ""
            in: query
            name: author.name
            required: true
            type: string
          -
            description: ""
            in: query
            name: author.email
            required: true
            type: string
          -
            description: ""
            in: body
            name: newKeyModel
            required: true
            schema:
                $ref: '#/definitions/KeyUpdateModel'
    delete:
      operationId: KeysDeleteKey
      tags:
        - keys
      produces:
        - text/html
      responses:
        200:
          description: Ok
          schema:
            type: string
      description: ""
      parameters:
        - 
          description: ""
          in: query
          name: keyPath
          required: true
          type: string
        -
          description: ""
          in: query
          name: author.name
          required: true
          type: string
        -
          description: ""
          in: query
          name: author.email
          required: true
          type: string
        -
          description: ""
          in: body
          name: additionalKeys
          required: false
          schema:
            type: array
            items:
              type: string
  /tags:
    get:
      operationId: TagsGet
      description: "Get all tags"
      produces:
        - application/json
      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              type: string
      tags:
        - tags
      parameters: []
    put:
      operationId: SaveTag
      description: "Save tags"
      
      produces:
        - text/html
      responses:
        '204':
          description: 'No content'
      tags:
        - tags
      consumes:
        - application/json
      parameters:
        - description: "The tags that need saving"
          in: body
          name: tagsToSave
          required: true
          schema:
            type: object
  /schemas:
    get:
      operationId: GetSchemas
      description: "Get query"
      produces:
        - application/json
      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              type: object
      tags:
        - schema
      parameters: []
  /schemas/{identityType}:
    delete:
      operationId: DeleteIdentity
      description: "Delete Schema"
      produces:
        - text/html
      responses:
        '200':
          description: Ok
          schema:
            type: string
      tags:
        - schema
      parameters:
        - description: "The type of the identity"
          in: path
          name: identityType
          required: true
          type: string
        - description: ""
          in: query
          name: author.name
          required: true
          type: string
        - description: ""
          in: query
          name: author.email
          required: true
          type: string
    post:
      operationId: SchemaAddIdentity
      description: "Add identity"
      produces:
        - text/html
      responses:
        '200':
          description: Ok
          schema:
            type: string
      tags:
        - schema
      consumes:
        - application/json
      parameters:
        - description: ""
          in: path
          name: identityType
          required: true
          type: string
        - description: ""
          in: query
          name: author.name
          required: true
          type: string
        - description: ""
          in: query
          name: author.email
          required: true
          type: string
        - description: ""
          in: body
          name: value
          required: true
          schema:
            type: object
    patch:
      operationId: SchemaPatchIdentity
      description: "Update identity"
      produces:
        - text/html
      responses:
        '200':
          description: Ok
          schema:
            type: string
      tags:
        - schema
      consumes:
        - application/json
      parameters:
        - description: ""
          in: path
          name: identityType
          required: true
          type: string
        - description: ""
          in: query
          name: author.name
          required: true
          type: string
        - description: ""
          in: query
          name: author.email
          required: true
          type: string
        - description: ""
          in: body
          name: patch
          required: true
          schema:
            $ref: '#/definitions/Patch'
  /manifests:
    get:
      operationId: GetManifests
      description: "Get Manifests"
      produces:
        - application/json
      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              type: object
      tags:
        - manifest
      parameters: []
  /suggestions:
    get:
      operationId: GetSuggestions
      description: "Get Suggestions"
      produces:
        - application/json
      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              type: object
      tags:
        - suggestions
      parameters: []
  /search:
    get:
      operationId: Search
      description: "Search"
      produces:
        - application/json
      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              type: object
      tags:
        - search
      parameters: []
  /dependents:
    get:
      operationId: GetDependents
      description: "Get Dependents"
      produces:
        - application/json
      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              type: object
      tags:
        - dependent
      parameters: []
  /revision-history:
    get:
      operationId: GetRevisionHistory
      description: "Get Revision History"
      produces:
        - application/json
      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              type: object
      tags:
        - revision-history
      parameters:
        -
          description: ""
          in: query
          name: keyPath
          required: true
          type: string
        -
          description: ""
          in: query
          name: since
          required: true
          type: string
  /policies:
    get:
      operationId: GetPolicies
      description: "Get Policies"
      produces:
        - application/json
      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              type: object
      tags:
        - policy
      parameters: []
    put:
      operationId: ReplacePolicy
      description: "Replace Policy"
      responses:
        '200':
          description: OK
      tags:
        - policy
      parameters: []
    patch:
      operationId: UpdatePolicy
      description: "Update Policy"
      responses:
        '200':
          description: OK
      tags:
        - policy
      parameters:
        - name: policyPatch
          in: body
          required: true
          schema:
            $ref: '#/definitions/Patch'
  /apps:
    post:
      operationId: AppsCreateApp
      produces:
        - application/json
      responses:
        200:
          description: Ok
          schema:
              $ref: '#/definitions/AppCreationResponseModel'
      description: ""
      tags:
        - apps
      consumes:
        - application/json
      parameters:
        -
          description: ""
          in: query
          name: author.name
          required: true
          type: string
        -
          description: ""
          in: query
          name: author.email
          required: true
          type: string
        -
          description: ""
          in: body
          name: newAppModel
          required: true
          schema:
            $ref: '#/definitions/AppCreationRequestModel'
definitions:  
  
  PatchOperation:
    type: object
    properties:
      op:
        type: string
      path:
        type: string
      value:
        type: object
  Patch:
    type: array
    items:
      $ref: '#/definitions/PatchOperation'
  KeyUpdateModel:
    description: ""
    properties:
        implementation:
            type: object
            description: ""
        manifest:
            type: object
            description: ""
    type: object
    required:
        - implementation
        - manifest
  AppCreationResponseModel:
      description: ""
      properties:
          appId:
              type: string
              description: ""
          appSecret:
              type: string
              description: ""
      type: object
      required:
          - appId
          - appSecret
  AppCreationRequestModel:
      description: ""
      properties:
          name:
              type: string
              description: ""
          permissions:
              type: array
              items:
                  type: string
              description: ""
      type: object
      required:
          - name
          - permissions