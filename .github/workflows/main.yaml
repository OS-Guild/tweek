name: Main

on: 
  push:
    paths-ignore:
    - 'docs/**'
    - README.md
jobs:
  build-authoring-gateway:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login Docker DH
        if: ${{ github.repository == 'soluto/tweek' }}
        env:
          DOCKERHUB_TOKEN: ${{ secrets.DOCKER_TOKEN }}
          DOCKERHUB_USER: ${{ secrets.DOCKER_USER }}
        run: echo $DOCKERHUB_TOKEN | docker login --username $DOCKERHUB_USER --password-stdin
      - name: build
        working-directory: .github/workflows
        run: docker buildx create --use && REF=$GITHUB_SHA docker buildx bake authoring gateway
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: build-images
          path: |
            .github/workflows/authoring-${{ github.sha }}.tar
            .github/workflows/gateway-${{ github.sha }}.tar

  build-publishing-api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login Docker DH
        if: ${{ github.repository == 'soluto/tweek' }}
        env:
          DOCKERHUB_TOKEN: ${{ secrets.DOCKER_TOKEN }}
          DOCKERHUB_USER: ${{ secrets.DOCKER_USER }}
        run: echo $DOCKERHUB_TOKEN | docker login --username $DOCKERHUB_USER --password-stdin
      - name: build
        working-directory: .github/workflows
        run: docker buildx create --use && REF=$GITHUB_SHA docker buildx bake publishing api
      - name: upload images
        uses: actions/upload-artifact@v2
        with:
          name: build-images
          path: |
            .github/workflows/publishing-${{ github.sha }}.tar
            .github/workflows/api-${{ github.sha }}.tar
  build-editor:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login Docker DH
        if: ${{ github.repository == 'soluto/tweek' }}
        env:
          DOCKERHUB_TOKEN: ${{ secrets.DOCKER_TOKEN }}
          DOCKERHUB_USER: ${{ secrets.DOCKER_USER }}
        run: echo $DOCKERHUB_TOKEN | docker login --username $DOCKERHUB_USER --password-stdin
      - name: build
        working-directory: .github/workflows
        run: docker buildx create --use && REF=$GITHUB_SHA docker buildx bake  editor
      - name: upload images
        uses: actions/upload-artifact@v2
        with:
          name: build-images
          path: |
            .github/workflows/editor-${{ github.sha }}.tar
  run-e2e-ui:
    needs: ["build-editor", "build-publishing-api", "build-authoring-gateway"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download build images
        uses: actions/download-artifact@v2
        with:
          name: build-images
      - name: load images into docker
        run: echo api publishing editor gateway authoring | xargs -n 1 | xargs -I {} docker load -i {}-$GITHUB_SHA.tar
      - name: tag all images
        run: echo api publishing editor gateway authoring | xargs -n 1 | xargs -I {} docker tag docker.pkg.github.com/yshayy/tweek/{}:ref-$GITHUB_SHA soluto/tweek-{}
      - name: setup e2e
        working-directory: e2e/ui
        run: yarn && yarn docker-compose up -d editor
      - name: run tests
        uses: DevExpress/testcafe-action@latest
        with:
          args: "-q -c 4 -S -s screenshots chrome:headless e2e/ui/spec"
  run-e2e-integration:
    needs: ["build-editor", "build-publishing-api", "build-authoring-gateway"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download build images
        uses: actions/download-artifact@v2
        with:
          name: build-images
      - name: load images into docker
        run: echo api publishing editor gateway authoring | xargs -n 1 | xargs -I {} docker load -i {}-$GITHUB_SHA.tar
      - name: tag all images
        run: echo api publishing editor gateway authoring | xargs -n 1 | xargs -I {} docker tag docker.pkg.github.com/yshayy/tweek/{}:ref-$GITHUB_SHA soluto/tweek-{}
      - name: run integration tests
        working-directory: CI
        run: yarn && yarn test:docker:integration
  run-net-tests:
    needs: ["build-editor", "build-publishing-api", "build-authoring-gateway"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download build images
        uses: actions/download-artifact@v2
        with:
          name: build-images
      - name: load images into docker
        run: echo api publishing editor gateway authoring | xargs -n 1 | xargs -I {} docker load -i {}-$GITHUB_SHA.tar
      - name: tag all images
        run: echo api publishing editor gateway authoring | xargs -n 1 | xargs -I {} docker tag docker.pkg.github.com/yshayy/tweek/{}:ref-$GITHUB_SHA soluto/tweek-{}
      - name: run smoke tests
        run: yarn && yarn test:docker:smoke
  push-images:
    needs: ["run-net-tests", "run-e2e-integration", "run-e2e-ui"]
    runs-on: ubuntu-latest
    if: ${{ github.repository == 'soluto/tweek' }}
    steps:
      - uses: actions/checkout@v2
      - name: Download build images
        uses: actions/download-artifact@v2
        with:
          name: build-images
      - name: load images into docker
        run: echo api publishing editor gateway authoring | xargs -n 1 | xargs -I {} docker load -i {}-$GITHUB_SHA.tar
      - name: tag all images
        run: echo api publishing editor gateway authoring | xargs -n 1 | xargs -I {} docker tag docker.pkg.github.com/yshayy/tweek/{}:ref-$GITHUB_SHA soluto/tweek-{}
      - name: push branch
        if: ${{ github.ref != 'refs/heads/master' }}
        run: |
          export GITHUB_BRANCH=$(echo refs/head/gh-actions | sed -e "s/refs\/head\///")
          echo api publishing editor gateway authoring | xargs -n 1 | xargs -I {} docker tag soluto/tweek-{} soluto/tweek-{}:$GITHUB_BRANCH 
          echo api publishing editor gateway authoring | xargs -n 1 | xargs -I {} docker push soluto/tweek-{}:$GITHUB_BRANCH 
      - name: push master
        if: ${{ github.ref == 'refs/heads/master' }}
        run: |
          echo api publishing editor gateway authoring | xargs -n 1 | xargs -I {} docker tag soluto/tweek-{} soluto/tweek-{}:latest
          echo api publishing editor gateway authoring | xargs -n 1 | xargs -I {} docker push soluto/tweek-{}:latest
      - name: check versions
        if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/gh-actions' }}
        working-directory: ".github/workflows"
        run: |
          ./version_to_deploy.sh
      - name: test push "api version"
        if: ${{ (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/gh-actions') && env.TWEEK_DOCKER_TAG_API != 'latest'  }}
        run: |
          docker tag soluto/tweek-api soluto/tweek-api:$TWEEK_DOCKER_TAG_API
          echo push (?) soluto/tweek-api:$TWEEK_DOCKER_TAG_API