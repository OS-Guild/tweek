on: 
  push:
    paths-ignore:
    - 'docs/**'
    - README.md
jobs:
  build-authoring-gateway:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login Docker DH
        env:
          DOCKERHUB_TOKEN: ${{ secrets.DOCKER_TOKEN }}
          DOCKERHUB_USER: ${{ secrets.DOCKER_USER }}
        run: echo $DOCKERHUB_TOKEN | docker login --username $DOCKERHUB_USER --password-stdin
      - name: Login Docker Github
        env: 
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo $GITHUB_TOKEN | docker login --username $GITHUB_ACTOR --password-stdin docker.pkg.github.com
      - name: build
        run: cd .github/workflows && docker buildx create --use && REF=$GITHUB_SHA docker buildx bake --load authoring gateway
      - name: push
        run: echo docker.pkg.github.com/yshayy/tweek/authoring:ref-$GITHUB_SHA docker.pkg.github.com/yshayy/tweek/gateway:ref-$GITHUB_SHA | xargs -n 1 docker push

  build-publishing-api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login Docker DH
        env:
          DOCKERHUB_TOKEN: ${{ secrets.DOCKER_TOKEN }}
          DOCKERHUB_USER: ${{ secrets.DOCKER_USER }}
        run: echo $DOCKERHUB_TOKEN | docker login --username $DOCKERHUB_USER --password-stdin
      - name: Login Docker Github
        env: 
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo $GITHUB_TOKEN | docker login --username $GITHUB_ACTOR --password-stdin docker.pkg.github.com
      - name: build
        run: cd .github/workflows && docker buildx create --use && REF=$GITHUB_SHA docker buildx bake --load publishing api
      - name: push
        run: echo docker.pkg.github.com/yshayy/tweek/publishing:ref-$GITHUB_SHA docker.pkg.github.com/yshayy/tweek/api:ref-$GITHUB_SHA | xargs -n 1 docker push
  build-editor:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login Docker DH
        env:
          DOCKERHUB_TOKEN: ${{ secrets.DOCKER_TOKEN }}
          DOCKERHUB_USER: ${{ secrets.DOCKER_USER }}
        run: echo $DOCKERHUB_TOKEN | docker login --username $DOCKERHUB_USER --password-stdin
      - name: Login Docker Github
        env: 
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo $GITHUB_TOKEN | docker login --username $GITHUB_ACTOR --password-stdin docker.pkg.github.com
      - name: build
        run: cd .github/workflows && docker buildx create --use && REF=$GITHUB_SHA docker buildx bake --load editor
      - name: push
        run: docker push docker.pkg.github.com/yshayy/tweek/editor:ref-$GITHUB_SHA
  run-e2e-ui:
    needs: ["build-editor", "build-publishing-api", "build-authoring-gateway"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login Docker Github
        env: 
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo $GITHUB_TOKEN | docker login --username $GITHUB_ACTOR --password-stdin docker.pkg.github.com
      - name: Pull images for local uses
        run: echo api publishing editor gateway authoring | xargs -n 1 | xargs -I {} docker pull docker.pkg.github.com/yshayy/tweek/{}:ref-$GITHUB_SHA
      - name: tag all images
        run: echo api publishing editor gateway authoring | xargs -n 1 | xargs -I {} docker tag docker.pkg.github.com/yshayy/tweek/{}:ref-$GITHUB_SHA soluto/tweek-{}
      - name: setup e2e
        working-directory: e2e/ui
        run: yarn && yarn docker-compose up -d editor
      - name: run tests
        uses: DevExpress/testcafe-action@latest
        with:
          args: "-q -c 5 -S -s screenshots chrome:headless e2e/ui/spec"
  run-e2e-integration:
    needs: ["build-editor", "build-publishing-api", "build-authoring-gateway"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login Docker Github
        env: 
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo $GITHUB_TOKEN | docker login --username $GITHUB_ACTOR --password-stdin docker.pkg.github.com
      - name: Pull images for local uses
        run: echo api publishing editor gateway authoring | xargs -n 1 | xargs -I {} docker pull docker.pkg.github.com/yshayy/tweek/{}:ref-$GITHUB_SHA
      - name: tag all images
        run: echo api publishing editor gateway authoring | xargs -n 1 | xargs -I {} docker tag docker.pkg.github.com/yshayy/tweek/{}:ref-$GITHUB_SHA soluto/tweek-{}
      - name: run integration tests
        working-directory: CI
        run: yarn && yarn test:docker:integration
  run-net-tests:
    needs: ["build-editor", "build-publishing-api", "build-authoring-gateway"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login Docker Github
        env: 
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo $GITHUB_TOKEN | docker login --username $GITHUB_ACTOR --password-stdin docker.pkg.github.com
      - name: Pull images for local uses
        run: echo api publishing editor gateway authoring | xargs -n 1 | xargs -I {} docker pull docker.pkg.github.com/yshayy/tweek/{}:ref-$GITHUB_SHA
      - name: tag all images
        run: echo api publishing editor gateway authoring | xargs -n 1 | xargs -I {} docker tag docker.pkg.github.com/yshayy/tweek/{}:ref-$GITHUB_SHA soluto/tweek-{}
      - name: run smoke tests
        run: yarn && yarn test:docker:smoke
      
