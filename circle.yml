
machine:
  services:
    - docker
  environment:
    NODE_ENV: development
    YARN_VERSION: 0.17.8
    PATH: "${PATH}:${HOME}/.yarn/bin:/usr/sbin:/sbin"
  node: 
    version: 6.9.1
dependencies:
  cache_directories:
    - ~/.yarn
    - ~/.yarn-cache
    - ~/docker
  pre:
    - mkdir -p ~/.yarn && cd ~/.yarn && wget https://yarnpkg.com/latest.tar.gz && tar -xf latest.tar.gz dist --strip-components=1
    - |
      if [[ -e ~/docker/tweek-back-office-image.tar ]]; then
        docker load -i ~/docker/tweek-images.tar
        echo "found cached images"
      else
        echo "cached images were not found"
      fi
    - cat CircleDockerfile > Dockerfile
    - docker images
    #- |
    #  docker login -u $DOCKER_USER -p $DOCKER_PASS -e $DOCKER_EMAIL
    #  docker pull soluto/tweek-api:latest
    #  docker pull tweekci/tweek-management:latest
    #  docker pull soluto/tweek-back-office 
    - docker login -u $DOCKER_USER -p $DOCKER_PASS -e $DOCKER_EMAIL
    - docker pull soluto/tweek-api:latest
    - docker pull tweekci/tweek-management:latest
    - docker pull soluto/tweek-back-office 
    - docker build --rm=false -t soluto/tweek-back-office .
    # run tweek management
    - docker run -d --name tweek-management -e GIT_URL=${GIT_URL} -e GIT_USER=${GIT_USER} -e GIT_PASSWORD=${GIT_PASSWORD} -e VALIDATION_URL='localhost:1111/validation' tweekci/tweek-management
    # run tweek api    
    - docker run -d -p 1111:80 --link tweek-management --name tweek-api -e Couchbase.Url=${COUCHBASE_URL} -e Couchbase.BucketName=${COUCHBASE_BUCKET_NAME} -e Couchbase.Password=${COUCHBASE_PASSWORD} -e RulesBlob.Url='http://tweek-management:3000/ruleset/latest' soluto/tweek-api
    # run tweek editor
    - docker run -d -p 4000:3000 -e GIT_URL=${GIT_URL} -e GIT_PASSWORD=${GIT_PASSWORD} -e GIT_USER=${GIT_USER} -e TWEEK_API_HOSTNAME=${TWEEK_API_HOSTNAME} -e GIT_CLONE_TIMEOUT_IN_MINUTES=${GIT_CLONE_TIMEOUT_IN_MINUTES} soluto/tweek-back-office:latest .
    - mkdir -p ~/docker
    - docker save soluto/tweek-api:latest tweekci/tweek-management:latest soluto/tweek-back-office > ~/docker/tweek-images.tar
  override:
    - yarn
    - cd ../CI && sh ./init-nuget-config.sh 
test:
  override:
    - cd ../CI && docker-compose up
    - wget --tries 20 --timeout=15 --read-timeout=20 --waitretry=30 --retry-connrefused 'http://localhost:4000/keys'
    - wget --tries 20 --timeout=15 --read-timeout=20 --waitretry=30 --retry-connrefused 'localhost:1111/status'
    - yarn test:unit && yarn test:e2e
general:
  build_dir: BackOffice
deployment:
  hub: 
    branch: master
    commands:
      - docker login -u $DOCKER_USER -p $DOCKER_PASS -e $DOCKER_EMAIL
      - docker push soluto/tweek-back-office
