
machine:
  services:
    - docker
  environment:
    NODE_ENV: development
    YARN_VERSION: 0.17.8
    PATH: "${PATH}:${HOME}/.yarn/bin:/usr/sbin:/sbin"
  node: 
    version: 6.9.1
dependencies:
  cache_directories:
    - ~/.yarn
    - ~/.yarn-cache
    - ~/docker
  pre:
    - mkdir -p ~/.yarn && cd ~/.yarn && wget https://yarnpkg.com/latest.tar.gz && tar -xf latest.tar.gz dist --strip-components=1
  override:
    - echo $TWEEK_API_HOSTNAME && echo ${TWEEK_API_HOSTNAME} && echo TWEEK_API_HOSTNAME
    - docker version
    - |
      if [[ -e ~/docker/tweek-back-office-image.tar ]]; then
        docker load -i ~/docker/tweek-back-office-image.tar
        echo "found cached images"
        docker images
      else
        echo "cached image wasnt found"
      fi
    - cat CircleDockerfile > Dockerfile
    - |
      docker login -u $DOCKER_USER -p $DOCKER_PASS -e $DOCKER_EMAIL
      docker pull soluto/tweek-back-office 
      docker build --rm=false -t soluto/tweek-back-office .
    - mkdir -p ~/docker; docker save soluto/tweek-back-office > ~/docker/tweek-back-office-image.tar
    - yarn
    - cd ../CI && sh ./init-nuget-config.sh 
test:
  override:
    - cd ../CI && docker-compose up
    - docker run -d -p 4000:3000 -e GIT_URL=${GIT_URL} -e GIT_PASSWORD=${GIT_PASSWORD} -e GIT_USER=${GIT_USER} -e TWEEK_API_HOSTNAME=${TWEEK_API_HOSTNAME} -e GIT_CLONE_TIMEOUT_IN_MINUTES=${GIT_CLONE_TIMEOUT_IN_MINUTES} soluto/tweek-back-office:latest .
    - wget --tries 20 --timeout=15 --read-timeout=20 --waitretry=30 --retry-connrefused 'http://localhost:4000/keys'
    - yarn test:unit && yarn test:e2e
general:
  build_dir: BackOffice
deployment:
  hub: 
    branch: master
    commands:
      - docker login -u $DOCKER_USER -p $DOCKER_PASS -e $DOCKER_EMAIL
      - docker push soluto/tweek-back-office
