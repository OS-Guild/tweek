version: '1.0'
stages:
- build
- test
- release
steps:
  main_clone:
    title: 'Cloning main repository...'
    type: git-clone
    repo: '${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}'
    revision: '${{CF_REVISION}}'
    git: github

  build:
    type: parallel
    name: build
    stage: build
    steps:
      VersionsToDeploy:
        description: Check versions to deploy
        title: Check versions to deploy
        image: alpine/git
        commands:
          - ./CI/versions_to_deploy.sh ${{CF_VOLUME_PATH}}/env_vars_to_export

      BuildingGateway:
        title: Building Gateway
        type: build
        image_name: soluto/tweek-gateway
        working_directory: ./services/gateway/

      BuildingGitRepository:
        title: Building Git Repository Docker Image
        type: build
        image_name: soluto/tweek-bare-repo
        working_directory: ./services/git-service/BareRepository/

      BuildingApiImage:
        title: Building Tweek Api Docker Image
        type: build
        image_name: soluto/tweek-api
        dockerfile: TweekApi.Dockerfile

      BuildingPublishing:
        title: Building Publishing Docker Image
        type: build
        image_name: soluto/tweek-publishing
        working_directory: ./services/publishing/

      BuildingAuthoring:
        title: Building Authoring Api Image
        type: build
        image_name: soluto/tweek-authoring
        working_directory: ./services/authoring

      BuildingEditor:
        title: Building Editor Docker Image
        type: build
        image_name: soluto/tweek-editor
        working_directory: ./services/editor/

      BuildingUITests:
        title: Building E2E UI Tests Docker Image
        type: build
        image_name: soluto/e2e-ui
        working_directory: ./e2e/ui

      BuildingIntegrationTests:
        title: Building E2E Integration Tests Docker Image
        type: build
        image_name: soluto/e2e-integration
        working_directory: ./e2e/integration

      BuildingApiSmokeTestImage:
        title: Building Tweek Api Smoke Test Docker Image
        type: build
        image_name: soluto/tweek-api-smoke-tests
        dockerfile: TweekApiSmokeTest.Dockerfile


  E2ETests:
    title: End2End Tests - integration, smoke & ui
    stage: test
    type: composition
    composition: ./CI/docker-compose.yml
    composition_variables:
      - GATEWAY_IMAGE=${{BuildingGateway}}
      - REPOSITORY_IMAGE=${{BuildingGitRepository}}
      - PUBLISHING_IMAGE=${{BuildingPublishing}}
      - API_IMAGE=${{BuildingApiImage}}
      - AUTHORING_IMAGE=${{BuildingAuthoring}}
      - EDITOR_IMAGE=${{BuildingEditor}}
      - CF_VOLUME_PATH=${{CF_VOLUME_PATH}}
    composition_candidates:
      smoke-tests:
        image: ${{BuildingApiSmokeTestImage}}
        depends_on:
          - gateway
          - publishing
        environment:
          - TWEEK_API_URL=http://api/
        links:
          - gateway:api

      e2e-integration:
        image: ${{BuildingIntegrationTests}}
        depends_on:
          - gateway
          - publishing
        environment:
          - GATEWAY_URL=http://gateway
          - MINIO_HOST=minio
          - MINIO_PORT=9000
          - MINIO_ACCESS_KEY_INLINE=AKIAIOSFODNN7EXAMPLE
          - MINIO_SECRET_KEY_INLINE=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
          - MINIO_BUCKET=tweek

      e2e-ui:
        image: ${{BuildingUITests}}
        shm_size: 2g
        depends_on:
          - editor
          - gateway
          - publishing
        environment:
          - GATEWAY_URL=http://gateway
          - EDITOR_URL=http://gateway
          - AUTH_DIGEST_CREDENTIALS=user:pwd
        command: [ "-q", "-c", "4", "chromium --headless --window-size='1280,720' --no-sandbox", "/src/spec" ]
    on_success:
      metadata:
        set:
          - '${{BuildingApiImage.imageId}}':
            - CF_QUALITY: true
          - '${{BuildingPublishing.imageId}}':
            - CF_QUALITY: true
          - '${{BuildingAuthoring.imageId}}':
            - CF_QUALITY: true
          - '${{BuildingGateway.imageId}}':
            - CF_QUALITY: true
          - '${{BuildingEditor.imageId}}':
              - CF_QUALITY: true
    on_fail:
      metadata:
        set:
          - '${{BuildingApiImage.imageId}}':
            - CF_QUALITY: false
          - '${{BuildingPublishing.imageId}}':
            - CF_QUALITY: false
          - '${{BuildingAuthoring.imageId}}':
            - CF_QUALITY: false
          - '${{BuildingGateway.imageId}}':
            - CF_QUALITY: false
          - '${{BuildingEditor.imageId}}':
              - CF_QUALITY: false

  release:
    type: parallel
    name: release
    stage: release
    steps:
      PushApiImageMaster:
        type: push
        title: Push Tweek Api - lastest
        when:
          branch:
            only:
              - master
        candidate: ${{BuildingApiImage}}
        registry: dockerhub-tweek
        tags:
          - latest
          - ${{TWEEK_DOCKER_TAG_API}}

      PushPublishingImageMaster:
        type: push
        title: Push Publishing - lastest
        when:
          branch:
            only:
              - master
        candidate: ${{BuildingPublishing}}
        registry: dockerhub-tweek
        tags:
          - latest
          - ${{TWEEK_DOCKER_TAG_PUBLISHING}}

      PushAuthoringImageMaster:
        type: push
        title: Push Tweek Authoring - lastest
        when:
          branch:
            only:
              - master
        candidate: ${{BuildingAuthoring}}
        registry: dockerhub-tweek
        tags:
          - latest
          - ${{TWEEK_DOCKER_TAG_AUTHORING}}

      PushEditorImageMaster:
        type: push
        title: Push Editor - latest
        when:
          branch:
            only:
              - master
        candidate: ${{BuildingEditor}}
        registry: dockerhub-tweek
        tags:
          - latest
          - ${{TWEEK_DOCKER_TAG_EDITOR}}

      PushGitRepositoryMaster:
        type: push
        title: Push Git Repository - latest
        when:
          branch:
            only:
              - master
        candidate: ${{BuildingGitRepository}}
        registry: dockerhub-tweek

      PushGatewayImageMaster:
        type: push
        title: Push Gateway - latest
        when:
          branch:
            only:
              - master
        candidate: ${{BuildingGateway}}
        registry: dockerhub-tweek
        tags:
          - latest
          - ${{TWEEK_DOCKER_TAG_GATEWAY}}
