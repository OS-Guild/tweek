version: '1.0'
steps:
  VersionsToDeploy:
      description: Check versions to deploy
      title: Check versions to deploy
      image: alpine/git
      commands:
          - ./ci/versions_to_deploy.sh ${{CF_VOLUME_PATH}}/env_vars_to_export

  BuildGitKeys:
    title: Building Git Keys Docker Image
    type: build
    image_name: soluto/tweek-test-keys
    working_directory: ./services/git-service/ssh/

  BuildingGitRepository:
    title: Building Git Repository Docker Image
    type: build
    image_name: soluto/tweek-bare-repo
    working_directory: ./services/git-service/BareRepository/

  BuildingApiImage:
    title: Building Tweek Api Docker Image
    type: build
    image_name: soluto/tweek-api
    working_directory: ${{main_clone}}
    dockerfile: TweekApiDockerfile
    build_arguments: 
      - VERSION_SUFFIX=ci-${{CF_BUILD_ID}}-${{CF_SHORT_REVISION}}
  
  BuildingManagement:
    title: Building Management Docker Image
    type: build
    image_name: soluto/tweek-management
    working_directory: ./services/management/

  BuildingAuthoring:
    title: Building Authoring Api Image
    type: build
    image_name: soluto/tweek-authoring
    working_directory: ./services/authoring

  BuildingEditor:
    title: Building Editor Docker Image
    type: build
    image_name: soluto/tweek-editor
    working_directory: ./services/editor/

  BuildingUITests:
    title: Building E2E UI Tests Docker Image
    type: build
    image_name: soluto/e2e-ui
    working_directory: ./e2e/ui

  BuildingIntegrationTests:
    title: Building E2E Integration Tests Docker Image
    type: build
    image_name: soluto/e2e-integration
    working_directory: ./e2e/integration

  Tests:
    title: Tests - e2e & smoke
    type: composition
    composition:
      version: '2'
      services:
        keys:
          image: ${{BuildGitKeys}}
        git:
          image: ${{BuildingGitRepository}}
          volumes_from:
            - keys
          environment:
            - PUBLIC_KEY_PATH=/gitkeys/tweekgit.pub
            - TWEEK_MANAGEMENT_URL=http://management:3000
        management:
          image: ${{BuildingManagement}}
          depends_on:
            - git
          volumes_from:
            - keys
          logging:
            driver: "none"
          environment:
            - GIT_USER=git
            - GIT_URL=ssh://git@git/tweek/tests
            - GIT_PRIVATE_KEY_PATH=/gitkeys/tweekgit
            - GIT_PUBLIC_KEY_PATH=/gitkeys/tweekgit.pub
            - VALIDATION_URL=http://api/validation
        api:
          image: ${{BuildingApiImage}}
          depends_on:
            - management
            - redis
          volumes_from:
            - keys
          environment:
            - Rules__Management__Url=http://management:3000
            - Rules__Management__SampleIntervalInMs=500
            - PUBLIC_KEY_PATH=/gitkeys/tweekgit_public.pfx
            - ContextProvider=redis
            - Redis__ConnectionString=redis:6379
            - Addons__Redis__ClassName=Tweek.Drivers.Redis.RedisServiceAddon
            - Addons__Redis__AssemblyName=Tweek.Drivers.Redis
            - CorsPolicies__Keys__Origins=http://editor:3000,http://testorigin
            - CorsPolicies__Keys__Methods=GET
            - CorsPolicies__Keys__MaxPreflightAge=60
            - CorsEnabled=true
            - CorsPolicies__Keys__Headers=
            - CorsPolicies__Keys__ExposedHeaders=
        authoring:
          image: ${{BuildingAuthoring}}
          depends_on:
            - git
          volumes_from:
            - keys
          logging:
            driver: "none"
          environment:
            - GIT_USER=git
            - GIT_URL=ssh://git@git/tweek/tests
            - GIT_PRIVATE_KEY_PATH=/gitkeys/tweekgit
            - GIT_PUBLIC_KEY_PATH=/gitkeys/tweekgit.pub
        editor:
          image: ${{BuildingEditor}}
          depends_on:
            - api
            - authoring
          volumes_from:
            - keys
          logging:
            driver: "none"
          environment:
            - GIT_PRIVATE_KEY_PATH=/gitkeys/tweekgit
            - TWEEK_API_HOSTNAME=http://api
            - AUTHORING_API_HOSTNAME=http://authoring:3000
        selenium:
          image: selenium/standalone-chrome:3.4.0
          logging:
            driver: "none"
        redis:
          image: redis:alpine
          expose:
            - "6379"
          logging:
            driver: "none"
    composition_candidates:
      smoke-tests:
        image: microsoft/aspnetcore-build:1.1.2
        depends_on: 
          - api
        volumes:
          - ${{CF_VOLUME}}:/repo
        working_dir: /repo/tweek
        environment: 
          - TWEEK_API_URL=http://api/
        command: /bin/bash -c "dotnet restore services/api/Tweek.ApiService.SmokeTests/Tweek.ApiService.SmokeTests.csproj && wget --tries 20 --timeout=15 --read-timeout=20 --waitretry=30 --retry-connrefused http://api/status && dotnet test services/api/Tweek.ApiService.SmokeTests/Tweek.ApiService.SmokeTests.csproj -c Release"
      e2e-ui:
        image: ${{BuildingUITests}}
        volumes_from:
          - keys
        depends_on: 
          - selenium
          - editor
          - authoring
          - api
        environment:
          - EDITOR_URL=http://editor:3000/
          - TWEEK_API_URL=http://api/
          - AUTHORING_URL=http://authoring:3000
          - GIT_PRIVATE_KEY_PATH=/gitkeys/tweekgit
        command: /bin/bash -c "wget --tries 20 --timeout=15 --read-timeout=20 --waitretry=30 --retry-connrefused http://api/status && yarn test -- --host selenium --port 4444"
      e2e-integration:
        image: ${{BuildingIntegrationTests}}
        volumes_from:
          - keys
        depends_on:
          - authoring
          - api
        environment:
          - API_URL=http://api
          - AUTHORING_URL=http://authoring:3000
          - MANAGEMENT_URL=http://tweek-management:3000
          - GIT_PRIVATE_KEY_PATH=/gitkeys/tweekgit
        command: /bin/bash -c "wget --tries 20 --timeout=15 --read-timeout=20 --waitretry=30 --retry-connrefused http://api/status && yarn test"
    on_success:
      metadata:
        set:
          - '${{BuildingApiImage.imageId}}':
            - CF_QUALITY: true
          - '${{BuildingManagement.imageId}}':
            - CF_QUALITY: true
          - '${{BuildingEditor.imageId}}':
            - CF_QUALITY: true
          - '${{BuildingAuthoring.imageId}}':
            - CF_QUALITY: true
    on_fail:
      metadata:
        set:
          - '${{BuildingApiImage.imageId}}':
            - CF_QUALITY: false
          - '${{BuildingManagement.imageId}}':
            - CF_QUALITY: false
          - '${{BuildingEditor.imageId}}':
            - CF_QUALITY: false
          - '${{BuildingAuthoring.imageId}}':
            - CF_QUALITY: false

  PushApiImageMaster:
    type: push
    title: Push Tweek Api - lastest
    when:
      branch:
        only:
          - master
    candidate: ${{BuildingApiImage}}
    tags:
      - latest
      - ${TWEEK_DOCKER_TAG_API}

  PushManagementImageMaster:
    type: push
    title: Push Management - lastest
    when:
      branch:
        only:
          - master
    candidate: ${{BuildingManagement}}
    tags:
      - latest
      - ${TWEEK_DOCKER_TAG_MANAGEMENT}

  PushAuthoringImageMaster:
    type: push
    title: Push Tweek Authoring - lastest
    when:
      branch:
        only:
          - master
    candidate: ${{BuildingAuthoring}}
    tags:
      - latest
      - ${TWEEK_DOCKER_TAG_AUTHORING}

  PushEditorImageMaster:
    type: push
    title: Push Editor - latest
    when:
      branch:
        only:
          - master
    candidate: ${{BuildingEditor}}
    tags:
      - latest
      - ${TWEEK_DOCKER_TAG_EDITOR}

  PushGitRepositoryMaster:
    type: push
    title: Push Git Repository - latest
    when:
      branch:
        only:
          - master
    candidate: ${{BuildingGitRepository}}
